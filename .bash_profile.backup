#!/bin/bash

### .bash_history ###
# Erase duplicates
export HISTCONTROL=erasedups
# resize history size
export HISTSIZE=5000
# append to bash_history if Terminal.app quits
shopt -s histappend

### visual / editor ###
export VISUAL=less
export EDITOR="/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"

alias subl="/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"

### Cli Colors ###
export CLICOLOR=1
# use yellow for dirâ€™s
export LSCOLORS=dxfxcxdxbxegedabagacad

# Set architecture flags
# export ARCHFLAGS="-arch x86_64"

export PATH=/usr/bin:/usr/sbin:/bin:/usr/local/bin:/sbin:/Users/kfl/bin

# Load .bashrc if it exists
test -f ~/.bashrc && source ~/.bashrc

# export RUBYMINE_HOME="/Applications/RubyMine.app/"

if [ -d /usr/local/etc/bash_completion.d ]; then
   . /usr/local/etc/bash_completion.d/git-completion.bash
fi


## Android
export NDK=/Users/kfl/dev/android-ndk-r10e
export NDK_ROOT=$NDK
export SDK_ROOT=/Users/kfl/dev/android-sdk-macosx
export SVN_EDITOR=/usr/bin/nano

export PATH=$PATH:$NDK:$SDK_ROOT/platform-tools:$SDK_ROOT/tools

# echo "------"
# echo $PATH
# echo "------"


export ANDROID_SDK=$SDK_ROOT
export ANDROID_NDK=$NDK

# # # SSH Agent ------------------------------------------------------------
# # # from http://help.github.com/working-with-key-passphrases/
# # SSH_ENV="$HOME/.ssh/environment"

# # function start_agent {
# #   echo "Initializing new SSH agent..."
# #   /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
# #   chmod 600 "${SSH_ENV}"
# #   . "${SSH_ENV}" > /dev/null
# #   /usr/bin/ssh-add;
# # }

# # # Source SSH settings, if applicable
# # if [ -f "${SSH_ENV}" ]; then
# #   . "${SSH_ENV}" > /dev/null
# #   #ps ${SSH_AGENT_PID} doesn't work under cywgin
# #   ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
# #     start_agent;
# #   }
# # else
# #   start_agent;
# # fi

# OCaml Settings

. /Users/kfl/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true
eval `opam config env`

export HOMEBREW_GITHUB_API_TOKEN=c769ceaf977ada8622e4ffef4316d5bd8e1e94f8

# Hello Messsage --------------------------------------------------
echo -e "Kernel Information: " `uname -smr`
echo -e "${COLOR_BROWN}`bash --version`"
echo -ne "${COLOR_GRAY}Uptime: "; uptime
echo -ne "${COLOR_GRAY}Server time is: "; date

# Identify OS and Machine -----------------------------------------
export OS=`uname -s | sed -e 's/ *//g;y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
export OSVERSION=`uname -r`; OSVERSION=`expr "$OSVERSION" : '[^0-9]*\([0-9]*\.[0-9]*\)'`
export MACHINE=`uname -m | sed -e 's/ *//g;y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
export PLATFORM="$MACHINE-$OS-$OSVERSION"

# SWITCH TO GCC

export PATH=/usr/local/bin:$PATH
export CC=/usr/local/bin/gcc-4.9
export CXX=/usr/local/bin/g++-4.9
export CPP=/usr/local/bin/cpp-4.9
export LD=/usr/local/bin/gcc-4.9
alias c++=/usr/local/bin/c++-4.9
alias g++=/usr/local/bin/g++-4.9
alias gcc=/usr/local/bin/gcc-4.9
alias cpp=/usr/local/bin/cpp-4.9
alias ld=/usr/local/bin/gcc-4.9
alias cc=/usr/local/bin/gcc-4.9

# SWITCH TO CLANG

# export CC=/usr/bin/gcc
# export CXX=/usr/bin/g++
# export CPP=/usr/bin/cpp
# export LD=/usr/bin/ld
# alias c++=/usr/bin/c++
# alias g++=/usr/bin/g++
# alias gcc=/usr/bin/gcc
# alias cpp=/usr/bin/cpp
# alias cc=/usr/bin/gcc
# alias ld=/usr/bin/ld
